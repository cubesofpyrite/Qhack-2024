def binary_to_grey(num_wires):

    """
    A function mapping binary encoded qubits to gray code.

    Args:
        num_wires (int): The number of qubits.

    """

    for i in reversed(range(num_wires-1)):
        qml.CNOT(wires=[i, i+1])

def run(test_case_input: str) -> str:
    binary_string = json.loads(test_case_input)
    n_wires = int(len(binary_string))

    dev = qml.device("default.qubit", wires = n_wires)
    @qml.qnode(dev)
    def circuit():
        qml.BasisEmbedding(binary_string, range(n_wires))
        binary_to_grey(n_wires)
        return qml.probs()
    
    output = circuit().tolist()
    
    return str(output)

def check(solution_output: str, expected_output: str) -> None:
    solution_output = json.loads(solution_output)
    expected_output = json.loads(expected_output)
    assert np.allclose(solution_output, expected_output, rtol=1e-4)
